# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Set system path
      - name: Set system path
        run: echo "${{github.workspace}}/.nuxt/" >> $GITHUB_PATH

      # https://github.com/marketplace/actions/setup-node-js-environment
      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependences
        run: npm install --quiet

      - name: Build dist
        run: npm run build

      # - name: Current date
      #   run: echo "DATETIME_NOW=$(date +'%Y%m%dt%H%M%S')" >> $GITHUB_ENV

      # https://github.com/marketplace/actions/publish-app-to-google-app-engine
      - name: Initialize Google Cloud SDK
        uses: zxyle/publish-gae-action@master
        with:
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ secrets.PROJECT_ID }}
          gae_config_path: ${{ github.workspace }}/app.yaml
          # An optional variables parameter can be used
          # gae_variables: ${{ secrets.GAE_VARIABLES }}

      - name: Publish app to Google App Engine
        run: |
          # This client-secret.json is converted by GCP_SA_KEY.
          gcloud auth activate-service-account ${{ secrets.SA_EMAIL }} --key-file=client-secret.json
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud -q app deploy app.yaml --promote
